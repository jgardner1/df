TODO/NOTES

* Maps with depth. Moving up and down either with the scroll wheel, a key
combo plus mouse motion vertically, or the same key combo and up/down.

I'd like to have a depth test. Draw the next 4 levels, using a fog so that the
4th level is very, very dim. Perhaps even get some perspective going? What
should the fog color be?

Or perhaps I can do an overlay of colored tiles that are transparent. These
will be colored based on the light in the cell below. This might give a cheap
volumetric feeling. It could also be for the topmost layer. Perhaps the open
cell above keeps track of the light level below and draws a transparent layer?

Moving up/down should "peel" away the top layer or stick it back on? Some kind
of animation seems important.

* Saving maps. Store the maps in a file. File format: JSON? Or maybe pickle
format. When I move to C, I can write a script to convert from pickle to C's
format. cPickle may or may not be faster than JSON.

* Tiling different kinds of stone. Let's say I have 16 different colors of
stone, plus 4 or so colors of wood, for 20 colors of material altogether. That
means for every item I have, I need to have a cell that describes it. That's
20 up stairs, 20 down stairs, and 20 up/down stairs, and 20 tables, etc...
This leads me to believe that I can have some algorithmically generated tiles?
Or maybe tiles have 3 colors, and the colors are determined by the material?
Perhaps I can do something like specifying 1 tile for all objects, and then
layering on top of it a texture. If the tile specified the normal, then we can
shade with dynamic lighting. This would be interesting.

Or I can go the minecraft route and just make things in 3D and have 20
different kinds of textures.

Or I can do what Dwarf Fortress does, and alternate FG and BG colors for
different materials.

UPDATING THE MAP
----------------

The map is going to contain ALL the things needed to draw *any* view of the
map. This includes items.

Whenever something changes, for instance, an item moves or a cube is cleared
or something built, then the map will create an event/signal that indicates
what changed. The MapView will listen for these, and update the VertexArray
accordingly.





GENERATION ALGORITHM
--------------------

An algorithm I used that was nice was to do a random walk, increasing the
terrain underneath by a certain height. I could do the same for ore or
whatnot. If I want a vein, I can vary the width of the vein, and then have a
direction that doesn't change very much, or a force that pulls the random walk
in one direction compared to another. I can vary levels as well to have veins
that go through levels.

Modeling water: I should study how hydrodynamics works in relation to erosion
and such. Maybe what I can do is model the plate tectonics of the region, and
then model soil build up and water behavior, and then model what plants do to
prevent erosion, and then on top of that throw a few world-wide catastrophes
such as a flood or a meteor crater.

Physics: I think I need to build up a physical model of how terrain works. I
need to understand shear forces and such, and a simple way to model if you can
build rooms of certain size. Also, what do supports do and how much weight
can they carry? Should dwarves build these automatically or should I requie
the player to build them?

I need to study geology. How are rocks formed? Where do geologists expect to
find certain minerals? For instance, does gold collect in pockets in intrusive
igneous rocks?

BUGS
----

I can't seem to get the background music to repeat. I would like it if
eos_action worked on Player, but it doesn't. I think I need to debug Pyglet.
Maybe I need to get the player integrated into the event stack? Is it not even
calling?



Drawing the next level is slow. I need a way to quickly draw floors, since I
plan on having 4 floors of stuff drawn at once.

I think I can create sections of the floor that are 16x16 tiles or so. I can
rotate in/out sections as needed. I can pre-create sections as well.
